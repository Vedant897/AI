graph={ 
'a':['b','d'], 
'b':['c','d'], 
'c':['e','d'], 
'd':['f'], 
'e':[], 
'f':[] 
} visited=[] queue=[] def bfs(visited,graph,node): 
visited.append(node) queue.append(node) while queue: 
m=queue.pop(0) print( m," ") for neighbours in graph[m]: 
if(neighbours not in visited): visited.append(neighbours) 
queue.append(neighbours) 
print("Breadth First Search") bfs(visited,graph,'a') visit=[] def 
dfs(visit,graph,node): 
if node not in visit: print(node) visit.append(node) for neighbours in 
graph[node]: 
if neighbours not in visit: 
dfs(visit,graph,neighbours) 
print("Depth First Search") dfs(visit,graph,'a') 
